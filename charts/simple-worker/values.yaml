# Default values for simple-app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: ""
fullnameOverride: ""

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []

# Environment variables for container
env: {}

volumes: []
  # if "size" is set, it will create a PVC
  # - name: data
  #   size: 1Gi
  #   mountPath: /data

  # if "emptyDir" is set, it will create an emptyDir
  # - name: cache
  #   emptyDir: true
  #   size: 1Gi
  #   mountPath: /cache

  # if "secret" is set, it will use the secret
  # - name: secret
  #   secret:
  #     secretName: secret
  #   mountPath: /secret

  # if "configMap" is set, it will use the configMap
  # - name: config
  #   configMap:
  #     name: config
  #   mountPath: /config


configs: []
  # - name: conn.json
  #   mountPath: /etc/conn.json
  #   value: |
  #     {
  #       "client": "pg",
  #       "connection": {
  #       }
  #     }

replicaCount: 1

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
